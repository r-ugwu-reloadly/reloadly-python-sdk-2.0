# -*- coding: utf-8 -*-

"""
reloadlysdk

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from reloadlysdk.models.recipient_phone_details import RecipientPhoneDetails


class ReloadlyGiftCardsOrdersRequest(object):

    """Implementation of the 'reloadly-gift-cards-orders-request' model.

    TODO: type model description here.

    Attributes:
        product_id (int): TODO: type description here.
        country_code (string): TODO: type description here.
        quantity (int): TODO: type description here.
        unit_price (int): TODO: type description here.
        custom_identifier (string): TODO: type description here.
        sender_name (string): TODO: type description here.
        recipient_email (string): TODO: type description here.
        recipient_phone_details (RecipientPhoneDetails): TODO: type
            description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "product_id": 'productId',
        "country_code": 'countryCode',
        "quantity": 'quantity',
        "unit_price": 'unitPrice',
        "custom_identifier": 'customIdentifier',
        "sender_name": 'senderName',
        "recipient_email": 'recipientEmail',
        "recipient_phone_details": 'recipientPhoneDetails'
    }

    def __init__(self,
                 product_id=None,
                 country_code=None,
                 quantity=None,
                 unit_price=None,
                 custom_identifier=None,
                 sender_name=None,
                 recipient_email=None,
                 recipient_phone_details=None):
        """Constructor for the ReloadlyGiftCardsOrdersRequest class"""

        # Initialize members of the class
        self.product_id = product_id 
        self.country_code = country_code 
        self.quantity = quantity 
        self.unit_price = unit_price 
        self.custom_identifier = custom_identifier 
        self.sender_name = sender_name 
        self.recipient_email = recipient_email 
        self.recipient_phone_details = recipient_phone_details 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        product_id = dictionary.get("productId") if dictionary.get("productId") else None
        country_code = dictionary.get("countryCode") if dictionary.get("countryCode") else None
        quantity = dictionary.get("quantity") if dictionary.get("quantity") else None
        unit_price = dictionary.get("unitPrice") if dictionary.get("unitPrice") else None
        custom_identifier = dictionary.get("customIdentifier") if dictionary.get("customIdentifier") else None
        sender_name = dictionary.get("senderName") if dictionary.get("senderName") else None
        recipient_email = dictionary.get("recipientEmail") if dictionary.get("recipientEmail") else None
        recipient_phone_details = RecipientPhoneDetails.from_dictionary(dictionary.get('recipientPhoneDetails')) if dictionary.get('recipientPhoneDetails') else None
        # Return an object of this model
        return cls(product_id,
                   country_code,
                   quantity,
                   unit_price,
                   custom_identifier,
                   sender_name,
                   recipient_email,
                   recipient_phone_details)
