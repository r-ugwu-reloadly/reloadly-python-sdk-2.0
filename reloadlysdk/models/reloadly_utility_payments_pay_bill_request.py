# -*- coding: utf-8 -*-

"""
reloadlysdk

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""


class ReloadlyUtilityPaymentsPayBillRequest(object):

    """Implementation of the 'reloadly-utility-payments-pay-bill-request' model.

    TODO: type model description here.

    Attributes:
        subscriber_account_number (string): TODO: type description here.
        amount (int): TODO: type description here.
        biller_id (int): TODO: type description here.
        use_local_amount (bool): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "subscriber_account_number": 'subscriberAccountNumber',
        "amount": 'amount',
        "biller_id": 'billerId',
        "use_local_amount": 'useLocalAmount'
    }

    def __init__(self,
                 subscriber_account_number=None,
                 amount=None,
                 biller_id=None,
                 use_local_amount=None):
        """Constructor for the ReloadlyUtilityPaymentsPayBillRequest class"""

        # Initialize members of the class
        self.subscriber_account_number = subscriber_account_number 
        self.amount = amount 
        self.biller_id = biller_id 
        self.use_local_amount = use_local_amount 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        subscriber_account_number = dictionary.get("subscriberAccountNumber") if dictionary.get("subscriberAccountNumber") else None
        amount = dictionary.get("amount") if dictionary.get("amount") else None
        biller_id = dictionary.get("billerId") if dictionary.get("billerId") else None
        use_local_amount = dictionary.get("useLocalAmount") if "useLocalAmount" in dictionary.keys() else None
        # Return an object of this model
        return cls(subscriber_account_number,
                   amount,
                   biller_id,
                   use_local_amount)
